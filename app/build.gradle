apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'



android {
    signingConfigs {
        release {
            keyAlias 'ppjun'
            keyPassword 'ouhuijun'
            storeFile file('/Users/ppjun/StudioProjects/Smzdm/app/ppjun.jks')
            storePassword 'ouhuijun'
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            keyAlias 'ppjun'
            keyPassword 'ouhuijun'
            storeFile file('/Users/ppjun/StudioProjects/Smzdm/app/ppjun.jks')
            storePassword 'ouhuijun'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        project.archivesBaseName = 'smzdm'
        applicationId "com.ppjun.android.smzdm"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.dependencies.androidJUnitRunner

        // Enabling multidex support.
        multiDexEnabled true

        compileOptions {
            targetCompatibility JavaVersion.VERSION_1_8
            sourceCompatibility JavaVersion.VERSION_1_8
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86'//, 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["support-vector-drawable"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
    implementation rootProject.ext.dependencies["progressmanager"]
    implementation rootProject.ext.dependencies["paginate"]
    kapt rootProject.ext.dependencies["dagger2-compiler"]
    kapt rootProject.ext.dependencies["dagger2-android-processor"]
    kapt rootProject.ext.dependencies["butterknife-compiler"]
    kapt rootProject.ext.dependencies["glide-compiler"]
    implementation(rootProject.ext.dependencies["cardview-v7"]) {
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["crashreport_upgrade"]
    implementation rootProject.ext.dependencies["nativecrashreport"]
    implementation rootProject.ext.dependencies["RecyclerViewBanner"]
    implementation rootProject.ext.dependencies["searchbar"]
    implementation(rootProject.ext.dependencies["lottie"]) {
        exclude group: 'com.android.support'
    }
    implementation rootProject.ext.dependencies["wechat"]
    implementation rootProject.ext.dependencies["photoview"]
    implementation(rootProject.ext.dependencies["vlayout"]) {
        transitive = true
    }
    implementation rootProject.ext.dependencies["lifecycle_extends"]
    kapt rootProject.ext.dependencies["lifecycle_compiler"]
    implementation rootProject.ext.dependencies["lifecycle_common"]
    implementation rootProject.ext.dependencies["multidex"]
    implementation project(':arms')
    implementation project(':arms-imageloader-glide')
    implementation rootProject.ext.dependencies["autosize"]
    implementation rootProject.ext.dependencies["circle-imageview"]
}
